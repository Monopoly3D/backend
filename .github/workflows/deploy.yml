name: Build and Deploy Monopoly3D Backend Server

on:
  push:
    branches:
      - main
      - feature_cicd  # ONLY FOR TESTING

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: prepare

    permissions:
      contents: read
      packages: write

    services:
      docker:
        image: docker:28.0.1
        options: --privileged

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push docker image to GitHub Container Registry
        run: |
          REPOSITORY_NAME=$(echo "${GITHUB_REPOSITORY}" | tr '[:upper:]' '[:lower:]')
          IMAGE_TAG="${GITHUB_REF_NAME}"
          docker build -t ghcr.io/$REPOSITORY_NAME:$IMAGE_TAG .
          docker push ghcr.io/$REPOSITORY_NAME:$IMAGE_TAG

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Setup SSH
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} > ~/.ssh/known_hosts

      - name: Deploy to Server
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker compose pull && docker compose up -d && exit"

      - name: Cleanup SSH
        run: rm -rf ~/.ssh
